basePath: /
definitions:
  app_api_v1_admin.AdminLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  app_api_v1_admin.AdminLoginResponse:
    properties:
      account_type:
        type: string
      expires_at:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/go-template_domain_entities.User'
    type: object
  app_api_v1_admin.CreateUserRequest:
    properties:
      account_type:
        $ref: '#/definitions/go-template_domain_entities.AccountType'
      auth_provider:
        type: string
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - account_type
    - auth_provider
    - email
    - password
    type: object
  app_api_v1_admin.DashboardStatsResponse:
    properties:
      active_sessions:
        type: integer
      admin_users:
        type: integer
      system_alerts:
        type: integer
      total_users:
        type: integer
    type: object
  app_api_v1_admin.UserListResponse:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
      users:
        items:
          $ref: '#/definitions/go-template_domain_entities.User'
        type: array
    type: object
  app_api_v1_auth.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  app_api_v1_example.CreateExampleRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  app_api_v1_example.CreateExampleResponse:
    properties:
      id:
        type: string
    type: object
  go-template_domain_auth.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/go-template_domain_entities.User'
    type: object
  go-template_domain_auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  go-template_domain_entities.AccountType:
    enum:
    - user
    - admin
    - super_admin
    type: string
    x-enum-varnames:
    - AccountTypeUser
    - AccountTypeAdmin
    - AccountTypeSuperAdmin
  go-template_domain_entities.Example:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  go-template_domain_entities.User:
    properties:
      account_type:
        $ref: '#/definitions/go-template_domain_entities.AccountType'
      auth_provider:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: https://github.com/guilhermebr/go-template
  description: A Go template API built with Domain-Driven Design principles
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Go Template API
  version: 1.0.0
paths:
  /admin/v1/dashboard/stats:
    get:
      description: Retrieve admin dashboard statistics including user counts and system
        alerts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app_api_v1_admin.DashboardStatsResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get dashboard statistics
      tags:
      - admin
  /admin/v1/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin user with privilege validation
      parameters:
      - description: Admin login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app_api_v1_admin.AdminLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app_api_v1_admin.AdminLoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Admin login
      tags:
      - admin
  /admin/v1/users:
    get:
      description: Retrieve a paginated list of users with optional search and filtering
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 20, max: 100)'
        in: query
        name: page_size
        type: integer
      - description: Search term for email
        in: query
        name: search
        type: string
      - description: Filter by account type
        in: query
        name: account_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app_api_v1_admin.UserListResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Create a new user account with specified account type
      parameters:
      - description: User creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app_api_v1_admin.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/go-template_domain_entities.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new user
      tags:
      - admin
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-template_domain_auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-template_domain_auth.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /api/v1/auth/me:
    get:
      description: Get current authenticated user information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-template_domain_entities.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app_api_v1_auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/go-template_domain_auth.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /api/v1/examples:
    post:
      consumes:
      - application/json
      description: Create a new example with title and content
      parameters:
      - description: Example to create
        in: body
        name: example
        required: true
        schema:
          $ref: '#/definitions/app_api_v1_example.CreateExampleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/app_api_v1_example.CreateExampleResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new example
      tags:
      - examples
  /api/v1/examples/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve an example by its unique identifier
      parameters:
      - description: Example ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-template_domain_entities.Example'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get an example by ID
      tags:
      - examples
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
