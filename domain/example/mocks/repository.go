// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"go-template/domain/entities"
	"sync"
)

// RepositoryMock is a mock implementation of example.Repository.
//
//	func TestSomethingThatUsesRepository(t *testing.T) {
//
//		// make and configure a mocked example.Repository
//		mockedRepository := &RepositoryMock{
//			CreateExampleFunc: func(contextMoqParam context.Context, example entities.Example) (string, error) {
//				panic("mock out the CreateExample method")
//			},
//			GetExampleByIDFunc: func(contextMoqParam context.Context, s string) (entities.Example, error) {
//				panic("mock out the GetExampleByID method")
//			},
//		}
//
//		// use mockedRepository in code that requires example.Repository
//		// and then make assertions.
//
//	}
type RepositoryMock struct {
	// CreateExampleFunc mocks the CreateExample method.
	CreateExampleFunc func(contextMoqParam context.Context, example entities.Example) (string, error)

	// GetExampleByIDFunc mocks the GetExampleByID method.
	GetExampleByIDFunc func(contextMoqParam context.Context, s string) (entities.Example, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateExample holds details about calls to the CreateExample method.
		CreateExample []struct {
			// ContextMoqParam is the contextMoqParam argument value.
			ContextMoqParam context.Context
			// Example is the example argument value.
			Example entities.Example
		}
		// GetExampleByID holds details about calls to the GetExampleByID method.
		GetExampleByID []struct {
			// ContextMoqParam is the contextMoqParam argument value.
			ContextMoqParam context.Context
			// S is the s argument value.
			S string
		}
	}
	lockCreateExample  sync.RWMutex
	lockGetExampleByID sync.RWMutex
}

// CreateExample calls CreateExampleFunc.
func (mock *RepositoryMock) CreateExample(contextMoqParam context.Context, example entities.Example) (string, error) {
	callInfo := struct {
		ContextMoqParam context.Context
		Example         entities.Example
	}{
		ContextMoqParam: contextMoqParam,
		Example:         example,
	}
	mock.lockCreateExample.Lock()
	mock.calls.CreateExample = append(mock.calls.CreateExample, callInfo)
	mock.lockCreateExample.Unlock()
	if mock.CreateExampleFunc == nil {
		var (
			sOut   string
			errOut error
		)
		return sOut, errOut
	}
	return mock.CreateExampleFunc(contextMoqParam, example)
}

// CreateExampleCalls gets all the calls that were made to CreateExample.
// Check the length with:
//
//	len(mockedRepository.CreateExampleCalls())
func (mock *RepositoryMock) CreateExampleCalls() []struct {
	ContextMoqParam context.Context
	Example         entities.Example
} {
	var calls []struct {
		ContextMoqParam context.Context
		Example         entities.Example
	}
	mock.lockCreateExample.RLock()
	calls = mock.calls.CreateExample
	mock.lockCreateExample.RUnlock()
	return calls
}

// GetExampleByID calls GetExampleByIDFunc.
func (mock *RepositoryMock) GetExampleByID(contextMoqParam context.Context, s string) (entities.Example, error) {
	callInfo := struct {
		ContextMoqParam context.Context
		S               string
	}{
		ContextMoqParam: contextMoqParam,
		S:               s,
	}
	mock.lockGetExampleByID.Lock()
	mock.calls.GetExampleByID = append(mock.calls.GetExampleByID, callInfo)
	mock.lockGetExampleByID.Unlock()
	if mock.GetExampleByIDFunc == nil {
		var (
			exampleOut entities.Example
			errOut     error
		)
		return exampleOut, errOut
	}
	return mock.GetExampleByIDFunc(contextMoqParam, s)
}

// GetExampleByIDCalls gets all the calls that were made to GetExampleByID.
// Check the length with:
//
//	len(mockedRepository.GetExampleByIDCalls())
func (mock *RepositoryMock) GetExampleByIDCalls() []struct {
	ContextMoqParam context.Context
	S               string
} {
	var calls []struct {
		ContextMoqParam context.Context
		S               string
	}
	mock.lockGetExampleByID.RLock()
	calls = mock.calls.GetExampleByID
	mock.lockGetExampleByID.RUnlock()
	return calls
}
