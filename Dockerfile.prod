# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git make bash build-base ca-certificates

# Set working directory
WORKDIR /app

# Copy go mod files first for better layer caching
COPY go.mod go.sum ./
RUN go mod download

# Copy Makefile for build setup
COPY Makefile ./

# Install only necessary build tools
RUN go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest && \
    go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

# Copy source code
COPY . .

# Build the application with static linking
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s -extldflags '-static'" \
    -a -installsuffix cgo \
    -o build/service ./cmd/service

# Final stage - using distroless for maximum security
FROM gcr.io/distroless/static:nonroot

# Copy binary from builder stage
COPY --from=builder /app/build/service /service

# Copy migration files if needed at runtime
COPY --from=builder /app/internal/repository/pg/migrations /migrations/

# Expose port
EXPOSE 3000

# Run as non-root user (distroless default)
USER nonroot:nonroot

# Run the application
ENTRYPOINT ["/service"] 