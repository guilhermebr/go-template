package templates

import "go-template/domain/entities"

templ Layout(title string, user *entities.User) {
	<!DOCTYPE html>
	<html lang="en" class="h-full bg-gray-50">
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<title>{ title } - Go Template</title>
		
		<!-- Favicon -->
		<link rel="icon" type="image/x-icon" href="/static/favicon.ico"/>
		
		<!-- Tailwind CSS -->
		<script src="https://cdn.tailwindcss.com"></script>
		
		<!-- HTMX -->
		<script src="https://unpkg.com/htmx.org@2.0.4"></script>
		
		<!-- Alpine.js -->
		<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
		
		<!-- Configure Tailwind -->
		<script>
			tailwind.config = {
				theme: {
					extend: {
						colors: {
							brand: {
								50: '#eff6ff',
								100: '#dbeafe', 
								200: '#bfdbfe',
								300: '#93c5fd',
								400: '#60a5fa',
								500: '#3b82f6',
								600: '#2563eb',
								700: '#1d4ed8',
								800: '#1e40af',
								900: '#1e3a8a',
								950: '#172554',
							}
						}
					}
				}
			}
		</script>

		<!-- Custom styles -->
		<style>
			.htmx-indicator {
				opacity: 0;
				transition: opacity 0.3s ease-in;
			}
			.htmx-request .htmx-indicator {
				opacity: 1;
			}
			.htmx-request.htmx-indicator {
				opacity: 1;
			}
		</style>
	</head>
	<body class="h-full">
		<div class="min-h-full">
			@Navbar(user)
			
			<main>
				{ children... }
			</main>
			
			@Footer()
		</div>
		
		<!-- HTMX Configuration -->
		<script>
			// Configure HTMX
			htmx.config.globalViewTransitions = true;
			htmx.config.useTemplateFragments = true;
			
			// Add loading indicators
			document.addEventListener('htmx:beforeRequest', function(evt) {
				evt.target.style.opacity = '0.6';
			});
			
			document.addEventListener('htmx:afterRequest', function(evt) {
				evt.target.style.opacity = '1';
			});
			
			// Show notifications for HTMX errors
			document.addEventListener('htmx:responseError', function(evt) {
				alert('Request failed: ' + evt.detail.xhr.statusText);
			});
		</script>
	</body>
	</html>
}

templ Navbar(user *entities.User) {
	<nav class="bg-white shadow">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="flex justify-between h-16">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<a href="/" class="text-xl font-bold text-brand-600">Go Template</a>
					</div>
					<div class="hidden md:block ml-10">
						<div class="flex items-baseline space-x-4">
							@NavLink("/", "Home", user == nil)
							@NavLink("/docs", "Documentation", true)
							if user != nil {
								@NavLink("/dashboard", "Dashboard", true)
								@NavLink("/profile", "Profile", true)
							}
						</div>
					</div>
				</div>
				
				<div class="flex items-center">
					if user != nil {
						<!-- User menu -->
						<div class="relative" x-data="{ open: false }">
							<button type="button" 
									class="max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500" 
									x-on:click="open = !open">
								<span class="sr-only">Open user menu</span>
								<div class="h-8 w-8 rounded-full bg-brand-500 flex items-center justify-center text-white font-medium text-sm">
									{ string(user.Email[0]) }
								</div>
								<span class="hidden ml-3 text-gray-700 text-sm font-medium lg:block">{ user.Email }</span>
								@Icon("chevron-down", "ml-2 h-4 w-4 text-gray-400")
							</button>
							
							<div x-show="open" 
								 x-transition:enter="transition ease-out duration-100"
								 x-transition:enter-start="transform opacity-0 scale-95"
								 x-transition:enter-end="transform opacity-100 scale-100"
								 x-transition:leave="transition ease-in duration-75"
								 x-transition:leave-start="transform opacity-100 scale-100"
								 x-transition:leave-end="transform opacity-0 scale-95"
								 x-on:click.outside="open = false"
								 class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 z-50">
								<a href="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Profile</a>
								<a href="/dashboard" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Dashboard</a>
								<form method="POST" action="/logout">
									<button type="submit" class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Sign out</button>
								</form>
							</div>
						</div>
					} else {
						<!-- Login/Register buttons -->
						<div class="flex items-center space-x-4">
							<a href="/login" class="text-gray-500 hover:text-gray-700 px-3 py-2 rounded-md text-sm font-medium">Login</a>
							<a href="/register" class="bg-brand-600 hover:bg-brand-700 text-white px-3 py-2 rounded-md text-sm font-medium">Sign up</a>
						</div>
					}
				</div>
				
				<!-- Mobile menu button -->
				<div class="md:hidden">
					<button type="button" class="bg-white inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500" x-data x-on:click="$dispatch('toggle-mobile-menu')">
						<span class="sr-only">Open main menu</span>
						@Icon("menu", "h-6 w-6")
					</button>
				</div>
			</div>
		</div>

		<!-- Mobile menu -->
		<div class="md:hidden" x-data="{ open: false }" x-on:toggle-mobile-menu.window="open = !open" x-show="open">
			<div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
				@MobileNavLink("/", "Home", user == nil)
				@MobileNavLink("/docs", "Documentation", true)
				if user != nil {
					@MobileNavLink("/dashboard", "Dashboard", true)
					@MobileNavLink("/profile", "Profile", true)
					<form method="POST" action="/logout" class="mt-4">
						<button type="submit" class="block w-full text-left px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50">Sign out</button>
					</form>
				} else {
					<div class="pt-4 pb-3 border-t border-gray-200">
						@MobileNavLink("/login", "Login", true)
						@MobileNavLink("/register", "Sign up", true)
					</div>
				}
			</div>
		</div>
	</nav>
}

templ NavLink(href, text string, show bool) {
	if show {
		<a href={ templ.URL(href) } 
		   class="text-gray-500 hover:text-gray-700 px-3 py-2 rounded-md text-sm font-medium">
			{ text }
		</a>
	}
}

templ MobileNavLink(href, text string, show bool) {
	if show {
		<a href={ templ.URL(href) } 
		   class="text-gray-500 hover:text-gray-700 block px-3 py-2 rounded-md text-base font-medium">
			{ text }
		</a>
	}
}

templ Footer() {
	<footer class="bg-white border-t border-gray-200 mt-auto">
		<div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
			<div class="grid grid-cols-1 md:grid-cols-4 gap-8">
				<div class="col-span-1 md:col-span-2">
					<div class="flex items-center">
						<span class="text-xl font-bold text-brand-600">Go Template</span>
					</div>
					<p class="mt-2 text-gray-500 text-sm">
						A modern Go web application template built with Domain-Driven Design principles.
					</p>
				</div>
				
				<div>
					<h3 class="text-sm font-semibold text-gray-900 tracking-wider uppercase">Resources</h3>
					<ul class="mt-4 space-y-4">
						<li><a href="/docs" class="text-base text-gray-500 hover:text-gray-900">Documentation</a></li>
						<li><a href="/docs/swagger-ui.html" class="text-base text-gray-500 hover:text-gray-900">API Reference</a></li>
					</ul>
				</div>
				
				<div>
					<h3 class="text-sm font-semibold text-gray-900 tracking-wider uppercase">Support</h3>
					<ul class="mt-4 space-y-4">
						<li><a href="#" class="text-base text-gray-500 hover:text-gray-900">Help Center</a></li>
						<li><a href="#" class="text-base text-gray-500 hover:text-gray-900">Contact</a></li>
					</ul>
				</div>
			</div>
			
			<div class="mt-8 border-t border-gray-200 pt-8">
				<p class="text-base text-gray-400 xl:text-center">
					&copy; 2024 Go Template. Built with Go, Templ, and Tailwind CSS.
				</p>
			</div>
		</div>
	</footer>
}

// Icon component with heroicons
templ Icon(name, class string) {
	<svg class={ class } fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
		switch name {
			case "menu":
				<path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"/>
			case "chevron-down":
				<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5"/>
			case "home":
				<path stroke-linecap="round" stroke-linejoin="round" d="m2.25 12 8.955-8.955a1.125 1.125 0 0 1 1.59 0L21.75 12M4.5 9.75v10.125a1.125 1.125 0 0 0 1.125 1.125H9.75v-4.875a1.125 1.125 0 0 1 1.125-1.125h2.25a1.125 1.125 0 0 1 1.125 1.125V21h4.125a1.125 1.125 0 0 0 1.125-1.125V9.75M8.25 21h8.25"/>
			case "user":
				<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z"/>
			case "document-text":
				<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z"/>
			case "chart-bar":
				<path stroke-linecap="round" stroke-linejoin="round" d="M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z"/>
			default:
				<path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
		}
	</svg>
}