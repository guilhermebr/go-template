package templates

templ Register(errorMsg string) {
	@Layout("Register", nil) {
		<div class="min-h-full flex flex-col justify-center py-12 sm:px-6 lg:px-8">
			<div class="sm:mx-auto sm:w-full sm:max-w-md">
				<div class="text-center">
					<h2 class="text-3xl font-extrabold text-gray-900">Create your account</h2>
					<p class="mt-2 text-sm text-gray-600">
						Already have an account?
						<a href="/login" class="font-medium text-brand-600 hover:text-brand-500">
							Sign in
						</a>
					</p>
				</div>
			</div>

			<div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
				<div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
					if errorMsg != "" {
						@RegisterErrorAlert(getRegisterErrorMessage(errorMsg))
					}
					
					<form class="space-y-6" action="/register" method="POST">
						<div>
							<label for="email" class="block text-sm font-medium text-gray-700">
								Email address
							</label>
							<div class="mt-1">
								<input 
									id="email" 
									name="email" 
									type="email" 
									autocomplete="email" 
									required 
									class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-brand-500 focus:border-brand-500 sm:text-sm"
									placeholder="Enter your email address"/>
							</div>
							<p class="mt-1 text-xs text-gray-500">We'll never share your email with anyone else.</p>
						</div>

						<div>
							<label for="password" class="block text-sm font-medium text-gray-700">
								Password
							</label>
							<div class="mt-1">
								<input 
									id="password" 
									name="password" 
									type="password" 
									autocomplete="new-password" 
									required 
									minlength="6"
									class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-brand-500 focus:border-brand-500 sm:text-sm"
									placeholder="Create a password"/>
							</div>
							<p class="mt-1 text-xs text-gray-500">Must be at least 6 characters long.</p>
						</div>

						<div>
							<label for="confirm_password" class="block text-sm font-medium text-gray-700">
								Confirm password
							</label>
							<div class="mt-1">
								<input 
									id="confirm_password" 
									name="confirm_password" 
									type="password" 
									autocomplete="new-password" 
									required 
									minlength="6"
									class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-brand-500 focus:border-brand-500 sm:text-sm"
									placeholder="Confirm your password"/>
							</div>
						</div>

						<div class="flex items-start">
							<div class="flex items-center h-5">
								<input 
									id="terms" 
									name="terms" 
									type="checkbox" 
									required
									class="focus:ring-brand-500 h-4 w-4 text-brand-600 border-gray-300 rounded"/>
							</div>
							<div class="ml-3 text-sm">
								<label for="terms" class="text-gray-500">
									I agree to the 
									<a href="#" class="text-brand-600 hover:text-brand-500">Terms and Conditions</a>
									and 
									<a href="#" class="text-brand-600 hover:text-brand-500">Privacy Policy</a>
								</label>
							</div>
						</div>

						<div>
							<button 
								type="submit" 
								class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-brand-600 hover:bg-brand-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500 disabled:opacity-50 disabled:cursor-not-allowed">
								Create account
							</button>
						</div>
					</form>

					<div class="mt-6">
						<div class="relative">
							<div class="absolute inset-0 flex items-center">
								<div class="w-full border-t border-gray-300"></div>
							</div>
							<div class="relative flex justify-center text-sm">
								<span class="px-2 bg-white text-gray-500">Benefits of joining</span>
							</div>
						</div>

						<div class="mt-6 space-y-3">
							@BenefitItem("Access to comprehensive API documentation")
							@BenefitItem("Personal dashboard and profile management")
							@BenefitItem("Secure authentication and data protection")
							@BenefitItem("Regular updates and new features")
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ BenefitItem(text string) {
	<div class="flex items-start">
		<div class="flex-shrink-0">
			<svg class="h-4 w-4 text-brand-500 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
				<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
			</svg>
		</div>
		<div class="ml-2">
			<span class="text-sm text-gray-600">{ text }</span>
		</div>
	</div>
}

templ RegisterErrorAlert(message string) {
	<div class="rounded-md bg-red-50 p-4 mb-4">
		<div class="flex">
			<div class="flex-shrink-0">
				<svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
					<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd"/>
				</svg>
			</div>
			<div class="ml-3">
				<h3 class="text-sm font-medium text-red-800">
					{ message }
				</h3>
			</div>
		</div>
	</div>
}

func getRegisterErrorMessage(errorType string) string {
	switch errorType {
		case "missing_credentials":
			return "Please fill in all required fields."
		case "password_mismatch":
			return "Passwords do not match. Please try again."
		case "email_exists":
			return "An account with this email already exists. Please try signing in instead."
		case "registration_failed":
			return "Registration failed. Please check your information and try again."
		default:
			return "An error occurred during registration. Please try again."
	}
}

// Client-side password validation
script validatePasswords() {
	const password = document.getElementById('password');
	const confirmPassword = document.getElementById('confirm_password');
	const submitBtn = document.querySelector('button[type="submit"]');
	
	function checkPasswords() {
		if (password.value && confirmPassword.value) {
			if (password.value === confirmPassword.value) {
				confirmPassword.setCustomValidity('');
				submitBtn.disabled = false;
			} else {
				confirmPassword.setCustomValidity('Passwords do not match');
				submitBtn.disabled = true;
			}
		}
	}
	
	password.addEventListener('input', checkPasswords);
	confirmPassword.addEventListener('input', checkPasswords);
}