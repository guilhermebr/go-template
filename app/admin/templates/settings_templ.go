// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"
import "go-template/domain/entities"
import "go-template/internal/types"

func Settings(user *entities.User, settings *types.SystemSettings) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Page header --> <div class=\"mb-8\"><h1 class=\"text-2xl font-bold text-gray-900\">System Settings</h1><p class=\"mt-1 text-sm text-gray-500\">Configure system-wide preferences and security settings.</p></div><form method=\"POST\" action=\"/settings\" class=\"space-y-8\"><!-- General Settings --><div class=\"bg-white shadow rounded-lg\"><div class=\"px-4 py-5 sm:p-6\"><h3 class=\"text-lg font-medium leading-6 text-gray-900\">General Settings</h3><div class=\"mt-2 max-w-xl text-sm text-gray-500\"><p>Basic system configuration options.</p></div><div class=\"mt-6 space-y-6\"><!-- Maintenance Mode --><div class=\"flex items-start\"><div class=\"flex items-center h-5\"><input id=\"maintenance_mode\" name=\"maintenance_mode\" type=\"checkbox\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil && settings.MaintenanceMode {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " class=\"focus:ring-admin-500 h-4 w-4 text-admin-600 border-gray-300 rounded\"></div><div class=\"ml-3 text-sm\"><label for=\"maintenance_mode\" class=\"font-medium text-gray-700\">Maintenance Mode</label><p class=\"text-gray-500\">When enabled, the system will be in maintenance mode and users will see a maintenance page.</p></div></div><!-- Registration Enabled --><div class=\"flex items-start\"><div class=\"flex items-center h-5\"><input id=\"registration_enabled\" name=\"registration_enabled\" type=\"checkbox\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil && settings.RegistrationEnabled {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, " class=\"focus:ring-admin-500 h-4 w-4 text-admin-600 border-gray-300 rounded\"></div><div class=\"ml-3 text-sm\"><label for=\"registration_enabled\" class=\"font-medium text-gray-700\">User Registration</label><p class=\"text-gray-500\">Allow new users to register for accounts.</p></div></div><!-- Email Notifications --><div class=\"flex items-start\"><div class=\"flex items-center h-5\"><input id=\"email_notifications\" name=\"email_notifications\" type=\"checkbox\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil && settings.EmailNotifications {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " class=\"focus:ring-admin-500 h-4 w-4 text-admin-600 border-gray-300 rounded\"></div><div class=\"ml-3 text-sm\"><label for=\"email_notifications\" class=\"font-medium text-gray-700\">Email Notifications</label><p class=\"text-gray-500\">Send email notifications for important system events.</p></div></div></div></div></div><!-- Authentication Providers --><div class=\"bg-white shadow rounded-lg\"><div class=\"px-4 py-5 sm:p-6\"><h3 class=\"text-lg font-medium leading-6 text-gray-900\">Authentication Providers</h3><div class=\"mt-2 max-w-xl text-sm text-gray-500\"><p>Configure available authentication providers for user creation.</p></div><div class=\"mt-6 space-y-6\"><!-- Default Auth Provider --><div><label for=\"default_auth_provider\" class=\"block text-sm font-medium text-gray-700\">Default Authentication Provider</label><div class=\"mt-1\"><select id=\"default_auth_provider\" name=\"default_auth_provider\" class=\"shadow-sm focus:ring-admin-500 focus:border-admin-500 block w-full sm:text-sm border-gray-300 rounded-md\"><option value=\"supabase\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil && settings.DefaultAuthProvider == "supabase" {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, " selected")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, ">Supabase</option></select></div><p class=\"mt-2 text-sm text-gray-500\">Default provider used when creating new users through the admin interface.</p></div><!-- Available Auth Providers --><div><fieldset><legend class=\"text-sm font-medium text-gray-700\">Available Providers</legend><div class=\"mt-2 space-y-2\"><div class=\"flex items-start\"><div class=\"flex items-center h-5\"><input id=\"provider_supabase\" name=\"available_auth_providers\" value=\"supabase\" type=\"checkbox\" checked class=\"focus:ring-admin-500 h-4 w-4 text-admin-600 border-gray-300 rounded\"></div><div class=\"ml-3 text-sm\"><label for=\"provider_supabase\" class=\"font-medium text-gray-700\">Supabase</label><p class=\"text-gray-500\">Supabase authentication service</p></div></div><!-- Future providers can be added here --></div></fieldset><p class=\"mt-2 text-sm text-gray-500\">Select which authentication providers are available for creating users.</p></div></div></div></div><!-- Security Settings --><div class=\"bg-white shadow rounded-lg\"><div class=\"px-4 py-5 sm:p-6\"><h3 class=\"text-lg font-medium leading-6 text-gray-900\">Security Settings</h3><div class=\"mt-2 max-w-xl text-sm text-gray-500\"><p>Security and access control configuration.</p></div><div class=\"mt-6 space-y-6\"><!-- Session Timeout --><div><label for=\"session_timeout\" class=\"block text-sm font-medium text-gray-700\">Session Timeout (minutes)</label><div class=\"mt-1\"><input type=\"number\" id=\"session_timeout\" name=\"session_timeout\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, " value=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", settings.SessionTimeout))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/admin/templates/settings.templ`, Line: 163, Col: 66}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, " value=\"1440\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, " min=\"15\" max=\"10080\" class=\"shadow-sm focus:ring-admin-500 focus:border-admin-500 block w-full sm:text-sm border-gray-300 rounded-md\"></div><p class=\"mt-2 text-sm text-gray-500\">How long user sessions remain active without activity.</p></div><!-- Password Policy --><div><label for=\"min_password_length\" class=\"block text-sm font-medium text-gray-700\">Minimum Password Length</label><div class=\"mt-1\"><input type=\"number\" id=\"min_password_length\" name=\"min_password_length\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, " value=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", settings.MinPasswordLength))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/admin/templates/settings.templ`, Line: 184, Col: 69}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, " value=\"8\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, " min=\"6\" max=\"128\" class=\"shadow-sm focus:ring-admin-500 focus:border-admin-500 block w-full sm:text-sm border-gray-300 rounded-md\"></div><p class=\"mt-2 text-sm text-gray-500\">Minimum number of characters required for user passwords.</p></div><!-- Two-Factor Authentication --><div class=\"flex items-start\"><div class=\"flex items-center h-5\"><input id=\"require_2fa\" name=\"require_2fa\" type=\"checkbox\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil && settings.Require2FA {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, " class=\"focus:ring-admin-500 h-4 w-4 text-admin-600 border-gray-300 rounded\"></div><div class=\"ml-3 text-sm\"><label for=\"require_2fa\" class=\"font-medium text-gray-700\">Require Two-Factor Authentication</label><p class=\"text-gray-500\">Require all admin users to enable two-factor authentication.</p></div></div></div></div></div><!-- Backup & Data --><div class=\"bg-white shadow rounded-lg\"><div class=\"px-4 py-5 sm:p-6\"><h3 class=\"text-lg font-medium leading-6 text-gray-900\">Backup & Data Management</h3><div class=\"mt-2 max-w-xl text-sm text-gray-500\"><p>Data backup and retention settings.</p></div><div class=\"mt-6 space-y-6\"><!-- Auto Backup --><div class=\"flex items-start\"><div class=\"flex items-center h-5\"><input id=\"auto_backup\" name=\"auto_backup\" type=\"checkbox\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil && settings.AutoBackup {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, " else")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings == nil {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, " class=\"focus:ring-admin-500 h-4 w-4 text-admin-600 border-gray-300 rounded\"></div><div class=\"ml-3 text-sm\"><label for=\"auto_backup\" class=\"font-medium text-gray-700\">Automatic Backups</label><p class=\"text-gray-500\">Automatically create database backups daily.</p></div></div><!-- Backup Retention --><div><label for=\"backup_retention_days\" class=\"block text-sm font-medium text-gray-700\">Backup Retention (days)</label><div class=\"mt-1\"><input type=\"number\" id=\"backup_retention_days\" name=\"backup_retention_days\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if settings != nil {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, " value=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", settings.BackupRetentionDays))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/admin/templates/settings.templ`, Line: 257, Col: 71}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, " value=\"30\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, " min=\"1\" max=\"365\" class=\"shadow-sm focus:ring-admin-500 focus:border-admin-500 block w-full sm:text-sm border-gray-300 rounded-md\"></div><p class=\"mt-2 text-sm text-gray-500\">How many days to keep backup files before automatic deletion.</p></div><!-- Manual Backup --><div class=\"pt-4 border-t border-gray-200\"><button type=\"button\" onclick=\"createBackup()\" class=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-admin-500\"><svg class=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"></path></svg> Create Backup Now</button></div></div></div></div><!-- System Information --><div class=\"bg-white shadow rounded-lg\"><div class=\"px-4 py-5 sm:p-6\"><h3 class=\"text-lg font-medium leading-6 text-gray-900\">System Information</h3><div class=\"mt-6\"><dl class=\"grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2\"><div><dt class=\"text-sm font-medium text-gray-500\">System Version</dt><dd class=\"mt-1 text-sm text-gray-900\">v1.0.0</dd></div><div><dt class=\"text-sm font-medium text-gray-500\">Last Updated</dt><dd class=\"mt-1 text-sm text-gray-900\">2024-01-15</dd></div><div><dt class=\"text-sm font-medium text-gray-500\">Database Version</dt><dd class=\"mt-1 text-sm text-gray-900\">PostgreSQL 15.0</dd></div><div><dt class=\"text-sm font-medium text-gray-500\">Uptime</dt><dd class=\"mt-1 text-sm text-gray-900\">7 days, 3 hours</dd></div><div><dt class=\"text-sm font-medium text-gray-500\">Environment</dt><dd class=\"mt-1 text-sm text-gray-900\"><span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">Development</span></dd></div><div><dt class=\"text-sm font-medium text-gray-500\">Last Backup</dt><dd class=\"mt-1 text-sm text-gray-900\">2 hours ago</dd></div></dl></div></div></div><!-- Save Button --><div class=\"flex justify-end\"><button type=\"button\" class=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-admin-500\">Cancel</button> <button type=\"submit\" class=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-admin-600 hover:bg-admin-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-admin-500\">Save Settings</button></div></form><script>\n\t\t\tfunction createBackup() {\n\t\t\t\tif (confirm(\"Create a manual backup now? This may take a few minutes.\")) {\n\t\t\t\t\t// Use HTMX to trigger backup\n\t\t\t\t\thtmx.ajax('POST', '/api/backup', {\n\t\t\t\t\t\tvalues: {},\n\t\t\t\t\t\tswap: 'none'\n\t\t\t\t\t});\n\t\t\t\t\talert(\"Backup started. You will be notified when it's complete.\");\n\t\t\t\t}\n\t\t\t}\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("System Settings", user).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
