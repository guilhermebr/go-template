package templates

import "go-template/domain/entities"
import "go-template/internal/types"
import "fmt"

templ Dashboard(user *entities.User, stats *types.DashboardStats) {
	@Layout("Dashboard", user) {
		<!-- Page header -->
		<div class="mb-8">
			<h1 class="text-2xl font-bold text-gray-900">Dashboard</h1>
			<p class="mt-1 text-sm text-gray-500">
				Welcome back, { user.Email }. Here's what's happening with your system today.
			</p>
		</div>

		<!-- Stats overview -->
		<div id="stats-container" 
			 hx-get="/api/stats" 
			 hx-trigger="load, every 30s" 
			 hx-indicator=".stats-loading">
			@StatsCards(stats)
		</div>

		<!-- Loading indicator -->
		<div class="stats-loading htmx-indicator">
			<div class="fixed top-20 right-4 bg-white rounded-lg shadow-lg p-3 z-50">
				<div class="flex items-center">
					<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-admin-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
						<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
						<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
					</svg>
					<span class="text-sm text-gray-600">Updating...</span>
				</div>
			</div>
		</div>

		<!-- Recent activity -->
		<div class="mt-8 grid grid-cols-1 gap-6 lg:grid-cols-2">
			<!-- Recent users -->
			<div class="bg-white overflow-hidden shadow rounded-lg">
				<div class="px-4 py-5 sm:p-6">
					<div class="flex items-center justify-between">
						<h3 class="text-lg leading-6 font-medium text-gray-900">Recent Users</h3>
						<a href="/users" class="text-sm font-medium text-admin-600 hover:text-admin-500">View all</a>
					</div>
					
					<div class="mt-6" 
						 hx-get="/api/users?limit=5" 
						 hx-trigger="load"
						 hx-target="#recent-users">
						<div id="recent-users">
							<div class="animate-pulse">
								<div class="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
								<div class="h-4 bg-gray-200 rounded w-1/2 mb-2"></div>
								<div class="h-4 bg-gray-200 rounded w-5/6"></div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- System health -->
			<div class="bg-white overflow-hidden shadow rounded-lg">
				<div class="px-4 py-5 sm:p-6">
					<h3 class="text-lg leading-6 font-medium text-gray-900">System Health</h3>
					
					<div class="mt-6">
						<dl class="space-y-3">
							<div class="flex justify-between">
								<dt class="text-sm font-medium text-gray-500">Server Status</dt>
								<dd class="text-sm text-green-600 font-medium">
									<div class="flex items-center">
										<span class="h-2 w-2 bg-green-400 rounded-full mr-2"></span>
										Online
									</div>
								</dd>
							</div>
							
							<div class="flex justify-between">
								<dt class="text-sm font-medium text-gray-500">Database</dt>
								<dd class="text-sm text-green-600 font-medium">
									<div class="flex items-center">
										<span class="h-2 w-2 bg-green-400 rounded-full mr-2"></span>
										Connected
									</div>
								</dd>
							</div>
							
							<div class="flex justify-between">
								<dt class="text-sm font-medium text-gray-500">Last Backup</dt>
								<dd class="text-sm text-gray-900">2 hours ago</dd>
							</div>
							
							<div class="flex justify-between">
								<dt class="text-sm font-medium text-gray-500">Disk Usage</dt>
								<dd class="text-sm text-gray-900">
									<div class="flex items-center">
										<div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
											<div class="bg-admin-600 h-2 rounded-full" style="width: 45%"></div>
										</div>
										45%
									</div>
								</dd>
							</div>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<!-- Quick actions -->
		<div class="mt-8">
			<div class="bg-white overflow-hidden shadow rounded-lg">
				<div class="px-4 py-5 sm:p-6">
					<h3 class="text-lg leading-6 font-medium text-gray-900">Quick Actions</h3>
					
					<div class="mt-6 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4">
						<a href="/users" 
						   class="relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-admin-500 rounded-lg border border-gray-200 hover:shadow-md transition-shadow">
							<div>
								<span class="rounded-lg inline-flex p-3 bg-admin-50 text-admin-600 ring-4 ring-white">
									@Icon("users", "h-6 w-6")
								</span>
							</div>
							<div class="mt-4">
								<h4 class="text-lg font-medium">
									<span class="absolute inset-0"></span>
									Manage Users
								</h4>
								<p class="mt-2 text-sm text-gray-500">
									Add, edit, or remove user accounts and permissions.
								</p>
							</div>
						</a>

						<a href="/settings" 
						   class="relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-admin-500 rounded-lg border border-gray-200 hover:shadow-md transition-shadow">
							<div>
								<span class="rounded-lg inline-flex p-3 bg-admin-50 text-admin-600 ring-4 ring-white">
									@Icon("cog", "h-6 w-6")
								</span>
							</div>
							<div class="mt-4">
								<h4 class="text-lg font-medium">
									<span class="absolute inset-0"></span>
									System Settings
								</h4>
								<p class="mt-2 text-sm text-gray-500">
									Configure system-wide settings and preferences.
								</p>
							</div>
						</a>

						<a href="/logs" 
						   class="relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-admin-500 rounded-lg border border-gray-200 hover:shadow-md transition-shadow">
							<div>
								<span class="rounded-lg inline-flex p-3 bg-admin-50 text-admin-600 ring-4 ring-white">
									@Icon("document-text", "h-6 w-6")
								</span>
							</div>
							<div class="mt-4">
								<h4 class="text-lg font-medium">
									<span class="absolute inset-0"></span>
									View Logs
								</h4>
								<p class="mt-2 text-sm text-gray-500">
									Monitor system logs and error reports.
								</p>
							</div>
						</a>

						<a href="/reports/analytics" 
						   class="relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-admin-500 rounded-lg border border-gray-200 hover:shadow-md transition-shadow">
							<div>
								<span class="rounded-lg inline-flex p-3 bg-admin-50 text-admin-600 ring-4 ring-white">
									@Icon("chart-bar", "h-6 w-6")
								</span>
							</div>
							<div class="mt-4">
								<h4 class="text-lg font-medium">
									<span class="absolute inset-0"></span>
									Analytics
								</h4>
								<p class="mt-2 text-sm text-gray-500">
									View detailed analytics and usage reports.
								</p>
							</div>
						</a>
					</div>
				</div>
			</div>
		</div>
	}
}

templ StatsCards(stats *types.DashboardStats) {
	<div class="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4">
		<!-- Total Users -->
		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<div class="w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center">
							@Icon("users", "h-5 w-5 text-white")
						</div>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">Total Users</dt>
							<dd class="text-lg font-medium text-gray-900">{ formatNumber(stats.TotalUsers) }</dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<!-- Admin Users -->
		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<div class="w-8 h-8 bg-green-500 rounded-md flex items-center justify-center">
							@Icon("shield-check", "h-5 w-5 text-white")
						</div>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">Admin Users</dt>
							<dd class="text-lg font-medium text-gray-900">{ formatNumber(stats.AdminUsers) }</dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<!-- Active Sessions -->
		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<div class="w-8 h-8 bg-yellow-500 rounded-md flex items-center justify-center">
							@Icon("clock", "h-5 w-5 text-white")
						</div>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">Active Sessions</dt>
							<dd class="text-lg font-medium text-gray-900">{ formatNumber(stats.ActiveSessions) }</dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<!-- System Alerts -->
		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<div class="w-8 h-8 bg-red-500 rounded-md flex items-center justify-center">
							@Icon("exclamation-triangle", "h-5 w-5 text-white")
						</div>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">System Alerts</dt>
							<dd class="text-lg font-medium text-gray-900">{ formatNumber(stats.SystemAlerts) }</dd>
						</dl>
					</div>
				</div>
			</div>
		</div>
	</div>
}

// Helper function to format numbers
func formatNumber(n int64) string {
	if n >= 1000000 {
		return fmt.Sprintf("%.1fM", float64(n)/1000000)
	} else if n >= 1000 {
		return fmt.Sprintf("%.1fK", float64(n)/1000)
	}
	return fmt.Sprintf("%d", n)
}